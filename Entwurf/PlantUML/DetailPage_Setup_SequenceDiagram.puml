@startuml

title Setup of Detail Page
skinparam BoxPadding 10

actor User

box 'View' #LightGreen
participant App
participant DetailPage
participant ObservationStationInfo
participant LocationMap
participant Diagram
end box

box 'Model' #LightSkyBlue
participant ObservationStation
participant Feature
end box

box 'Controller' #LightSalmon
participant  DataProvider
end box

User -> App : request detail page

activate App
App -> DetailPage : render() with props = {observationStation}
activate DetailPage

DetailPage -> ObservationStationInfo : render() with props = {observationStation}
activate ObservationStationInfo
ObservationStationInfo -> ObservationStation : observationStation.getName()
activate ObservationStation
ObservationStationInfo <- ObservationStation : name: string
deactivate ObservationStation
ObservationStationInfo -> ObservationStation: observationStation.getDescription()
activate ObservationStation
ObservationStationInfo <- ObservationStation : description: string
deactivate ObservationStation
ObservationStationInfo -> ObservationStation : observationStation.getPosition()
activate ObservationStation
ObservationStationInfo <- ObservationStation : position: Position
deactivate ObservationStation
ObservationStationInfo -> ObservationStation : observationStation.getFeatures()
activate ObservationStation
ObservationStationInfo <- ObservationStation : features: Feature[]
deactivate ObservationStation
loop for each feature in features
    ObservationStationInfo -> DataProvider : getLatestObservation(observationStation, feature)
    activate DataProvider
    ObservationStationInfo <- DataProvider : observation: Observation
    deactivate DataProvider
end
DetailPage <- ObservationStationInfo : observationStationInfo: React.Component
deactivate ObservationStationInfo

DetailPage -> ObservationStation : getPosition()
activate ObservationStation
DetailPage <- ObservationStation : position: Position
deactivate ObservationStation

DetailPage -> LocationMap: render() with props = {position}
activate LocationMap
LocationMap -> ObservationStation : station.getPosition()
activate ObservationStation
LocationMap <- ObservationStation : position
deactivate ObservationStation
DetailPage <- LocationMap: locationMap: React.Component
deactivate LocationMap

DetailPage -> ObservationStation : getDiagrams()
activate ObservationStation
loop for each feature of this
    ObservationStation -> Feature : getDiagrams(this)
    activate Feature
    ObservationStation <- Feature : diagrams: Diagram[]
    deactivate Feature
end
DetailPage <- ObservationStation : diagrams: React.Component[]
deactivate ObservationStation

App <- DetailPage : detailPage: React.Component
deactivate DetailPage

User <- App : show detail page

...page built complete...

User -> Diagram : change diagram configuration
activate DetailPage
activate Diagram
Diagram -> DataProvider : get new data
activate DataProvider
Diagram <- DataProvider : data
deactivate DataProvider
Diagram -> Diagram : plot new data (change state)
App <-- Diagram : page is automatically updated
deactivate Diagram
deactivate DetailPage
User <- App : show updated detail page
@enduml